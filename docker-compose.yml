version: '3.8'
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker --log.level=DEBUG
    ports:
      # The HTTP port
      - "8080:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8081:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  bagman:
    build: ./
    expose: 
      - "8080"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    labels:
      - "traefik.http.routers.bagman.rule=PathPrefix(`/`)"
      - traefik.http.services.bagman.loadBalancer.sticky.cookie.name=server_id
      - traefik.http.services.bagman.loadBalancer.sticky.cookie.httpOnly=true
      - traefik.http.services.bagman.loadbalancer.server.port=8080
        # Enable CORS headers
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      - "traefik.http.routers.bagman.middlewares=cors"
  redis:
    image: redis:7
    restart: always
    # expose:
    #   - "6379"
    command: redis-server --save 20 1 --loglevel verbose
    volumes: 
      - cache:/data
    labels:
      - "traefik.enable=false"
volumes:
  cache:
    driver: local